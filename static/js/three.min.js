import * as THREE from 'three';


const scene = new THREE.Scene();
const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
const renderer = new THREE.WebGLRenderer();
renderer.setSize(window.innerWidth, window.innerHeight);
document.body.appendChild(renderer.domElement);

const cubeGeometry = new THREE.BoxGeometry(2, 2, 2);
const sphereGeometry = new THREE.SphereGeometry(1.5, 32, 32);
const planeGeometry = new THREE.PlaneGeometry(20, 20);
const textureLoader = new THREE.TextureLoader();
const cubeTexture = textureLoader.load('cube_texture.jpg');
const sphereTexture = textureLoader.load('sphere_texture.jpg');
const planeTexture = textureLoader.load('plane_texture.jpg');
const cubeMaterial = new THREE.MeshPhongMaterial({ map: cubeTexture });
const sphereMaterial = new THREE.MeshPhongMaterial({ map: sphereTexture });
const planeMaterial = new THREE.MeshPhongMaterial({ map: planeTexture });
const cube = new THREE.Mesh(cubeGeometry, cubeMaterial);
const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);
const plane = new THREE.Mesh(planeGeometry, planeMaterial);
cube.position.set(-5, 0, 0);
sphere.position.set(5, 0, 0);
plane.rotation.x = -Math.PI / 2; // Düzlemi yatay hale getirme
plane.position.y = -2; // Yer seviyesine alçaltma
scene.add(cube);
scene.add(sphere);
scene.add(plane);


const cameraTarget = new THREE.Vector3(0, 0, 0);
camera.position.set(0, 5, 15);
camera.lookAt(cameraTarget);

const rotationSpeedX = 0.01;
const rotationSpeedY = 0.02;


const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);
scene.add(ambientLight);
const directionalLight = new THREE.DirectionalLight(0xffffff, 1);
directionalLight.position.set(5, 5, 5);
scene.add(directionalLight);
const pointLight = new THREE.PointLight(0xffffff, 1);
pointLight.position.set(-5, -5, -5);
scene.add(pointLight);

function animate() {

    cube.rotation.x += rotationSpeedX;
    cube.rotation.y += rotationSpeedY;
    sphere.rotation.x += rotationSpeedX;
    sphere.rotation.y += rotationSpeedY;

    const radius = 15;
    const angle = Date.now() * 0.0005;
    camera.position.x = Math.cos(angle) * radius;
    camera.position.z = Math.sin(angle) * radius;
    camera.lookAt(cameraTarget);

    renderer.render(scene, camera);
  
    requestAnimationFrame(animate);
}

animate();
